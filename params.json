{"name":"Node-500px","tagline":"A wrapper for the 500px.com API","body":"# node-500px.\r\nThis plugin is a wrapper for the API of [500px.com](http://500px.com). To get more details on what the API offers, go to [developer.500px.com](http://developer.500px.com/).\r\n\r\n## Install\r\nThe easiest way is to install through npm:\r\n```bash\r\nnpm install 500px\r\n```\r\nOf course you can also clone via git or download the .zip or .tar.gz via the links above.\r\n\r\n## Getting started\r\nInclude the module in your project and initialize it:\r\n```javascript\r\nvar API500px = require('500px'),\r\n    api500px = new API500px(consumer_key);\r\n```\r\nNow you are ready to do some calls to the 500px.com API!\r\n\r\n## GET photos\r\nTo retrieve photos, just do the following:\r\n```javascript\r\napi500px.photos.getPopular({'sort': 'created_at', 'rpp': '100'},  function(error, results) {\r\n    if (error) {\r\n        // Error!\r\n    } else {\r\n        // Do something\r\n    }\r\n});\r\n``` \r\n\r\nChoose on of the funtions to get photos:\r\n* `getById (photo_id, arguments, callback)`\r\n* `getByUsername (username, arguments, callback)`\r\n* `getByUserId (user_id, arguments, callback)`\r\n* `getFavoritesByUsername (username, arguments, callback)`\r\n* `getFavoritesByUserId (user_id, arguments, callback)`\r\n* `getFriendsByUsername (username, arguments, callback)`\r\n* `getFriendsByUserId (user_id, arguments, callback)`\r\n* `getPopular (arguments, callback)`\r\n* `getUpcoming (arguments, callback)`\r\n* `getEditorsChoice (arguments, callback)`\r\n* `getFreshToday (arguments, callback)`\r\n* `getFreshYesterday (arguments, callback)`\r\n* `getFreshWeek (arguments, callback)`\r\n* `searchByTag (tag, arguments, callback)`\r\n* `searchByTerm (term, arguments, callback)`\r\n* `searchByGeo (geo, arguments, callback)`\r\n\r\nFor more information on the possible arguments, please check the [500px.com photos API](http://developer.500px.com/docs/photos-index)\r\n\r\n## GET users\r\nTo retrieve users, just do the following:\r\n```javascript\r\napi500px.users.getById(1234,  function(error, results) {\r\n    if (error) {\r\n        // Error!\r\n    } else {\r\n        // Do something\r\n    }\r\n});\r\n``` \r\n\r\nChoose on of the funtions to get users:\r\n* `getById (id, callback)`\r\n* `getByName (username, callback)`\r\n* `getByEmail (email, callback)`\r\n* `getFriendsById (id, arguments, callback)`\r\n\r\nFor more information on the possible arguments, please check the [500px.com users API](http://developer.500px.com/docs/users-index)\r\n\r\n## GET blogs\r\nTo retrieve blogs, just do the following:\r\n```javascript\r\napi500px.blogs.getFresh({rpp: 50},  function(error, results) {\r\n    if (error) {\r\n        // Error!\r\n    } else {\r\n        // Do something\r\n    }\r\n});\r\n``` \r\n\r\nChoose on of the funtions to get blogs:\r\n* `getById (id, arguments, callback)`\r\n* `getCommentsById (id, arguments, callback)`\r\n* `getFresh (arguments, callback)`\r\n* `getByUsername (username, arguments, callback)`\r\n* `getByUserId (user_id, arguments, callback)`\r\n\r\nFor more information on the possible arguments, please check the [500px.com blogs API](http://developer.500px.com/docs/blogs-index)","google":"UA-31560607-1","note":"Don't delete this file! It's used internally to help with page regeneration."}